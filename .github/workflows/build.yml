name: Build

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-18.04
    if: contains(github.event.head_commit.message, '[ci skip]') != 'true'
    steps:
      - uses: actions/checkout@v2
      - name: Cache Check
        id: build-cache
        uses: actions/cache@v2
        with:
          path: "./bin"
          key: "build-generic-linux-${{ matrix.php }}-${{ hashFiles('./compile.sh') }}"
      - name: Set PHP version outputs
        id: php
        run: |
          VERSION=$(cat compile.sh | grep 'PHP_VERSION=' | sed 's/[^0-9.]*//g')
          echo "::set-output name=version::${VERSION}"
          TAG=$(echo "${VERSION::-3}")
          echo "::set-output name=release_tag::${TAG}"
      - name: Install dependencies via APT
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: |
          sudo apt update
          sudo apt install -y re2c libtool libtool-bin g++ git bison wget gzip make autoconf automake libc-bin bzip2 cmake pkg-config zip
      - name: Compile
        if: steps.build-cache.outputs.cache-hit != 'true'
        run: |
          chmod +x compile.sh
          export CFLAGS="$CFLAGS -march=x86-64"
          export CXXFLAGS="$CXXFLAGS -march=x86-64"
          ./compile.sh -t linux64 -j 4 -f -g
          tar -czf PHP_Linux-x86_64.tar.gz bin
          zip -r Linux.zip PHP_Linux-x86_64.tar.gz install.log
      - name: Create and Publish Release
        if: steps.build-cache.outputs.cache-hit != 'true'
        uses: marvinpinto/action-automatic-releases@v1.1.1
        with:
          automatic_release_tag: "${{ steps.php.outputs.release_tag }}"
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          title: "PHP ${{ steps.php.outputs.version }}"
          files: Linux.zip
          prerelease: false
